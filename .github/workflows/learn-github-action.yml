name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: 
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

# concurrency (only 1 workflow can run in a group at one time)

jobs:
  # job1-check-bats-version:
  # needs (specify what jobs needs to be complete first before running this job)

  # if ${ { always() } }
  # In this case always() makes it so that this job will always run no matter what
  # If makes it so that this job it is under will run if the condition evaluates to true

    # name: My first job
    # runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     version: [10, 12, 14]
    #     os: [macOs, windows, ubuntu-latest]
    # note: runs (variable.length multipled together) # of threads
    # This will create 3 threads, each running with different version, assuming you
    # are using the version values

    # defaults:
    #     run:
    #         working-directory: .github/scripts
    #         shell: bash
    # steps:
    #   - name: My first step - check out repository
    #     uses: actions/checkout@v4

    #   - name: My second step - installing node
    #     uses: ./.github/actions/my-first-action

    #   - name: Make the script files executable
    #     run: chmod +x my-script.sh

    #   - name: My third step - running the scripts
    #     run: ./my-script.sh
        
    #   - run: npm install -g bats
    #   - run: bats -v

  build:
    name: Relase Product
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v5 
        with:
          python-version: '3.10' 

      - name: Set the value
        id: step_one
        run: |
          cd images
          echo "test=yellow" >> "$GITHUB_ENV"
      - name: Use the value
        run: |
          echo "$test"
      - name: Run python with value
        run: |
          python test.py
        

      # - name: Create release
      #   id: create_release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref_name }}
      #   run: |
      #     gh release create "$tag" \
      #         --repo="$GITHUB_REPOSITORY" \
      #         --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
      #         -n "First actual release test 2"
